name: Check deployment scripts
on:
  pull_request:
    types:
      - opened
      - reopened
      - edited
      - synchronize
    paths:
      - 'ansible/*'
      - 'terraform/*'

jobs:
  validate-deployment:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      TF_VAR_github_token: ${{ secrets.GITHUB_TOKEN }}
      TERRAFORM_WORKDIR: terraform
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check ${{ env.TERRAFORM_WORKDIR }}
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init ${{ env.TERRAFORM_WORKDIR }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color ${{ env.TERRAFORM_WORKDIR }}

      - name: Terraform Plan
        id: plan
        continue-on-error: true
        run: terraform plan -no-color ${{ env.TERRAFORM_WORKDIR }}

      - name: Lint Ansible Playbook
        id: ansible
        uses: ansible/ansible-lint-action@master
        with:
          targets: ansible/playbook.yml
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
            #### Terraform Plan üöÄ\`${{ steps.plan.outcome }}\`
            #### Ansible Lint üî®\`${{ steps.ansible.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.APPLY}\`\`\`

            </details>

            <details><summary>Show Ansible lint</summary>

            \`\`\`${steps.apply.outputs.stdout}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })